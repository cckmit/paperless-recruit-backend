<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.user.service.dao.UserMapper">
    <sql id="user">
        id, username, password, phone, email, is_available as available, create_time, update_time
    </sql>

    <insert id="saveUser" keyProperty="id">
        insert into user(username, password)
        values(#{username}, #{password})
    </insert>

    <select id="getUser" resultType="user">
        select <include refid="user"/>
        from user
        where id = #{id}
    </select>

    <select id="getUserByQuery" resultType="user">
        select <include refid="user"/>
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="idList != null">
                and id in (
                <foreach collection="idList"  item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="username != null">
                and username like "%"#{username}"%"
            </if>
            <if test="phone != null">
                and phone like "%"#{phone}"%"
            </if>
            <if test="email != null">
                and email like "%"#{email}"%"
            </if>
            <if test="available != null">
                and is_available = #{available}
            </if>
        </where>
    </select>

    <select id="getUserByUsername" resultType="user">
        select
        <include refid="user"/>
        from user
        where username = #{username}
    </select>

    <select id="getUserByPhone" resultType="user">
        select
        <include refid="user"/>
        from user
        where phone = #{phone}
    </select>

    <select id="getUserByEmail" resultType="user">
        select
        <include refid="user"/>
        from user
        where email = #{email}
    </select>

    <select id="countUserByUsername" resultType="int">
        select
        count(*)
        from user
        where username = #{username}
    </select>

    <select id="countUserByPhone" resultType="int">
        select
        count(*)
        from user
        where phone = #{phone}
    </select>

    <select id="countUserByEmail" resultType="int">
        select
        count(*)
        from user
        where email = #{email}
    </select>

    <update id="updateUsername">
        update user
        set username = #{username}
        where id = #{id}
    </update>

    <update id="updatePhone">
        update user
        set phone = #{phone}
        where id = #{id}
    </update>

    <update id="updateEmail">
        update user
        set email = #{email}
        where id = #{id}
    </update>

    <update id="updatePassword">
        update user
        set password = #{password}
        where id = #{id}
    </update>

    <update id="updateAvailable">
        update user
        set is_available = #{available}
        where id = #{id}
    </update>

</mapper>