<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.notification.service.dao.SystemNotificationMapper">

    <resultMap id="systemNotification" type="com.xiaohuashifu.recruit.notification.service.do0.SystemNotificationDO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="notificationTitle" column="notification_title"/>
        <result property="notificationType" column="notification_type"/>
        <result property="notificationContent" column="notification_content"/>
        <result property="notificationTime" column="notification_time"/>
        <result property="checked" column="is_checked"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="systemNotification">
        id, user_id, notification_title, notification_type, notification_content, notification_time, is_checked,
            create_time, update_time
    </sql>

    <insert id="insertSystemNotification" keyProperty="id">
        insert into system_notification(user_id, notification_title, notification_type, notification_content,
                                        notification_time)
        values(#{userId}, #{notificationTitle}, #{notificationType}, #{notificationContent}, #{notificationTime})
    </insert>

    <select id="getSystemNotification" resultMap="systemNotification">
        select <include refid="systemNotification"/>
        from system_notification
        where id = #{id}
    </select>

    <select id="listSystemNotifications" resultMap="systemNotification">
        select <include refid="systemNotification"/>
        from system_notification
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="ids != null">
                and id in (
                <foreach collection="ids"  item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="notificationTitle != null">
                and notification_title like "%"#{notificationTitle}"%"
            </if>
            <if test="notificationType != null">
                and notification_type = #{notificationType}
            </if>
            <if test="checked != null">
                and is_checked = #{checked}
            </if>
        </where>
        <if test="orderByNotificationTime || orderByNotificationTimeDesc || orderByChecked || orderByCheckedDesc
         || orderByCreateTime || orderByCreateTimeDesc || orderByUpdateTime || orderByUpdateTimeDesc">
            order by
            <trim suffixOverrides=",">
                <if test="orderByNotificationTime">
                    notification_time,
                </if>
                <if test="orderByNotificationTimeDesc">
                    notification_time desc,
                </if>
                <if test="orderByChecked">
                    is_checked,
                </if>
                <if test="orderByCheckedDesc">
                    is_checked desc,
                </if>
                <if test="orderByCreateTime">
                    create_time,
                </if>
                <if test="orderByCreateTimeDesc">
                    create_time desc,
                </if>
                <if test="orderByUpdateTime">
                    update_time,
                </if>
                <if test="orderByUpdateTimeDesc">
                    update_time desc,
                </if>
            </trim>
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*)
        from system_notification
        where id = #{id}
    </select>

    <update id="updateChecked">
        update system_notification
        set is_checked = #{checked}
        where id = #{id}
    </update>

</mapper>