<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.user.service.dao.UserMapper">

    <resultMap id="user" type="com.xiaohuashifu.recruit.user.service.do0.UserDO">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="pwd"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="available" column="is_available"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="user">
        id, username, pwd, phone, email, is_available, create_time, update_time
    </sql>

    <insert id="insertUser" keyProperty="id">
        insert into user_principal
        <trim prefix="(" suffix=")" suffixOverrides="," >
            username, pwd,
            <if test="phone != null" >
                phone,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides="," >
            #{username}, #{password},
            <if test="phone != null" >
                #{phone},
            </if>
        </trim>
    </insert>

    <select id="getUser" resultMap="user">
        select <include refid="user"/>
        from user_principal
        where id = #{id}
    </select>

    <select id="listUsers" resultMap="user">
        select <include refid="user"/>
        from user_principal
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="ids != null">
                and id in (
                <foreach collection="ids" item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="username != null">
                and username like "%"#{username}"%"
            </if>
            <if test="phone != null">
                and phone like "%"#{phone}"%"
            </if>
            <if test="email != null">
                and email like "%"#{email}"%"
            </if>
            <if test="available != null">
                and is_available = #{available}
            </if>
        </where>
    </select>

    <select id="getUserByUsername" resultMap="user">
        select <include refid="user"/>
        from user_principal
        where username = #{username}
    </select>

    <select id="getUserByUsernameOrPhoneOrEmail" resultMap="user">
        select <include refid="user"/>
        from user_principal
        where username = #{usernameOrPhoneOrEmail}
        or phone = #{usernameOrPhoneOrEmail}
        or email = #{usernameOrPhoneOrEmail}
    </select>

    <select id="getUserByPhone" resultMap="user">
        select <include refid="user"/>
        from user_principal
        where phone = #{phone}
    </select>

    <select id="getUserByEmail" resultMap="user">
        select <include refid="user"/>
        from user_principal
        where email = #{email}
    </select>

    <select id="count" resultType="int">
        select count(*)
        from user_principal
        where id = #{id}
    </select>

    <select id="countByUsername" resultType="int">
        select count(*)
        from user_principal
        where username = #{username}
    </select>

    <select id="countByPhone" resultType="int">
        select count(*)
        from user_principal
        where phone = #{phone}
    </select>

    <select id="countByEmail" resultType="int">
        select count(*)
        from user_principal
        where email = #{email}
    </select>

    <update id="updateUsername">
        update user_principal
        set username = #{username}
        where id = #{id}
    </update>

    <update id="updatePhone">
        update user_principal
        set phone = #{phone}
        where id = #{id}
    </update>

    <update id="updateEmail">
        update user_principal
        set email = #{email}
        where id = #{id}
    </update>

    <update id="updatePassword">
        update user_principal
        set pwd = #{password}
        where id = #{id}
    </update>

    <update id="updatePasswordByEmail">
        update user_principal
        set pwd = #{password}
        where email = #{email}
    </update>

    <update id="updatePasswordByPhone">
        update user_principal
        set pwd = #{password}
        where phone = #{phone}
    </update>

    <update id="updateAvailable">
        update user_principal
        set is_available = #{available}
        where id = #{id}
    </update>

</mapper>