<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.organization.service.dao.OrganizationMapper">

    <resultMap id="organization" type="com.xiaohuashifu.recruit.organization.service.do0.OrganizationDO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="organizationName" column="organization_name"/>
        <result property="abbreviationOrganizationName" column="abbreviation_organization_name"/>
        <result property="introduction" column="introduction"/>
        <result property="logoUrl" column="logo_url"/>
        <result property="memberNumber" column="member_number"/>
        <result property="numberOfDepartments" column="number_of_departments"/>
        <result property="labels" column="labels"
                typeHandler="com.xiaohuashifu.recruit.common.mybatis.type.StringSetTypeHandler"/>
        <result property="available" column="is_available"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="organization">
        id, user_id, organization_name, abbreviation_organization_name, introduction, logo_url, member_number,
        number_of_departments, labels, is_available, create_time, update_time
    </sql>

    <insert id="insertOrganization" keyProperty="id">
        insert into organization(user_id, labels)
        values(#{userId}, json_array())
    </insert>

    <select id="getOrganization" resultMap="organization">
        select <include refid="organization"/>
        from organization
        where id = #{id}
    </select>

    <select id="getOrganizationByUserId" resultMap="organization">
        select <include refid="organization"/>
        from organization
        where user_id = #{userId}
    </select>

    <select id="getOrganizationLogoUrl" resultType="string">
        select logo_url
        from organization
        where id = #{id}
    </select>

    <select id="getUserId" resultType="long">
        select user_id
        from organization
        where id = #{id}
    </select>

    <select id="getAvailable" resultType="boolean">
        select is_available
        from organization
        where id = #{id}
    </select>

    <select id="listOrganizations" resultMap="organization">
        select <include refid="organization"/>
        from organization
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="ids != null">
                and id in (
                <foreach collection="ids"  item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="organizationName != null">
                and organization_name like "%"#{organizationName}"%"
            </if>
            <if test="abbreviationOrganizationName != null">
                and abbreviation_organization_name like "%"#{abbreviationOrganizationName}"%"
            </if>
            <if test="available != null">
                and is_available = #{available}
            </if>
        </where>
        <if test="orderByAvailable || orderByAvailableDesc || orderByOrganizationName || orderByOrganizationNameDesc
         || orderByAbbreviationOrganizationName || orderByAbbreviationOrganizationNameDesc
         || orderByCreateTime || orderByCreateTimeDesc || orderByUpdateTime || orderByUpdateTimeDesc">
            order by
            <trim suffixOverrides=",">
                <if test="orderByAvailable">
                    is_available,
                </if>
                <if test="orderByAvailableDesc">
                    is_available desc,
                </if>
                <if test="orderByOrganizationName">
                    organization_name,
                </if>
                <if test="orderByOrganizationNameDesc">
                    organization_name desc,
                </if>
                <if test="orderByAbbreviationOrganizationName">
                    abbreviation_organization_name,
                </if>
                <if test="orderByAbbreviationOrganizationNameDesc">
                    abbreviation_organization_name desc,
                </if>
                <if test="orderByCreateTime">
                    create_time,
                </if>
                <if test="orderByCreateTimeDesc">
                    create_time desc,
                </if>
                <if test="orderByUpdateTime">
                    update_time,
                </if>
                <if test="orderByUpdateTimeDesc">
                    update_time desc,
                </if>
            </trim>
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*)
        from organization
        where id = #{id}
    </select>

    <select id="countByOrganizationName" resultType="int">
        select count(*)
        from organization
        where organization_name = #{organizationName}
    </select>

    <select id="countLabels" resultType="int">
        select json_length(labels)
        from organization
        where id = #{id}
    </select>

    <update id="updateOrganizationName">
        update organization
        set organization_name = #{organizationName}
        where id = #{id}
    </update>

    <update id="updateAbbreviationOrganizationName">
        update organization
        set abbreviation_organization_name = #{abbreviationOrganizationName}
        where id = #{id}
    </update>

    <update id="updateIntroduction">
        update organization
        set introduction = #{introduction}
        where id = #{id}
    </update>

    <update id="updateLogoUrl">
        update organization
        set logo_url = #{logoUrl}
        where id = #{id}
    </update>

    <update id="updateAvailable">
        update organization
        set is_available = #{available}
        where id = #{id}
    </update>

    <update id="addLabel">
        update organization
        set labels = json_array_append(labels, '$', #{label})
        where id = #{id}
        and not #{label} member of(labels->'$')
    </update>

    <update id="removeLabel">
        update organization
        set labels = json_remove(labels, replace(json_search(labels, 'one', #{label}), '"', ''))
        where id = #{id}
        and #{label} member of(labels->'$')
    </update>

    <delete id="removeLabels">
        update organization
        set labels = json_remove(labels, replace(json_search(labels, 'one', #{label}), '"', ''))
        where #{label} member of(labels->'$')
    </delete>

    <update id="increaseMemberNumber">
        update organization
        set member_number = member_number + 1
        where id = #{id}
    </update>

    <update id="decreaseMemberNumber">
        update organization
        set member_number = member_number - 1
        where id = #{id}
    </update>

    <update id="increaseNumberOfDepartments">
        update organization
        set number_of_departments = number_of_departments + 1
        where id = #{id}
    </update>

    <update id="decreaseNumberOfDepartments">
        update organization
        set number_of_departments = number_of_departments - 1
        where id = #{id}
    </update>

</mapper>