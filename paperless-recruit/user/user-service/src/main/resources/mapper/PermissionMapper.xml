<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.user.service.dao.PermissionMapper">
    <sql id="permission">
        id, parent_permission_id, permission_name, authorization_url, description, is_available as available,
        create_time, update_time
    </sql>

    <sql id="p_permission">
        p.id, p.parent_permission_id, p.permission_name, p.authorization_url, p.description, p.is_available as available,
        p.create_time, p.update_time
    </sql>

    <insert id="savePermission" keyProperty="id">
        insert into permission(parent_permission_id, permission_name, authorization_url, description, is_available)
        values(#{parentPermissionId}, #{permissionName}, #{authorizationUrl}, #{description}, #{available})
    </insert>

    <delete id="deletePermission">
        delete from permission
        where id = #{id}
    </delete>

    <delete id="deleteRolePermissionByPermissionId">
        delete from role_permission
        where permission_id = #{permissionId}
    </delete>


    <select id="getPermission" resultType="permission">
        select <include refid="permission"/>
        from permission
        where id = #{id}
    </select>


    <select id="getPermissionListByRoleIdList" resultType="permission">
        select
        <include refid="p_permission"/>
        from role_permission rp left join permission p on rp.permission_id = p.id
        where rp.role_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPermissionByUserId" resultType="permission">
        select
            <include refid="p_permission"/>
        from user u
            left join user_role ur on u.id = ur.user_id
            left join role r on ur.role_id = r.id
            left join role_permission rp on r.id = rp.role_id
            left join permission p on rp.permission_id = p.id
        where u.id = #{userId}
--         这个条件是因为如果这个用户没有任何权限，不应该返回
        and p.id is not null
    </select>

    <select id="getPermissionByQuery" resultType="permission">
        select
            <include refid="permission"/>
        from permission
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="idList != null">
                and id in (
                <foreach collection="idList"  item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="parentPermissionId != null">
                and parent_permission_id = #{parentPermissionId}
            </if>
            <if test="permissionName != null">
                and permission_name like "%"#{permissionName}"%"
            </if>
            <if test="authorizationUrl != null">
                and authorization_url like "%"#{authorizationUrl}"%"
            </if>
            <if test="available != null">
                and is_available = #{available}
            </if>
        </where>
    </select>

    <select id="getAllPermission" resultType="permission">
        select <include refid="permission"/>
        from permission
    </select>

    <select id="getIdListByParentPermissionId" resultType="long">
        select id
        from permission
        where parent_permission_id = #{parentPermissionId}
    </select>


    <select id="getIdListByParentPermissionIdAndAvailable" resultType="long">
        select id
        from permission
        where parent_permission_id = #{parentPermissionId}
        and is_available = #{available}
    </select>

    <select id="count" resultType="int">
        select count(*)
        from permission
        where id = #{id}
    </select>

    <select id="countByPermissionName" resultType="int">
        select count(*)
        from permission
        where permission_name = #{permissionName}
    </select>

    <select id="countByIdAndAvailable" resultType="int">
        select count(*)
        from permission
        where id = #{id}
        and is_available = #{available}
    </select>

    <select id="countByParentPermissionId" resultType="int">
        select count(*)
        from permission
        where parent_permission_id = #{parentPermissionId}
    </select>

    <update id="updatePermissionName">
        update permission
        set permission_name = #{permissionName}
        where id = #{id}
    </update>

    <update id="updateAuthorizationUrl">
        update permission
        set authorization_url = #{authorizationUrl}
        where id = #{id}
    </update>

    <update id="updateDescription">
        update permission
        set description = #{description}
        where id = #{id}
    </update>

    <update id="updateAvailable">
        update permission
        set is_available = #{available}
        where id = #{id}
    </update>

    <update id="updateAvailableIfUnavailable">
        update permission
        set is_available = true
        where id = #{id}
        and is_available = false
    </update>

</mapper>