<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohuashifu.recruit.registration.service.dao.RecruitmentMapper">

    <resultMap id="recruitment" type="com.xiaohuashifu.recruit.registration.service.do0.RecruitmentDO">
        <id property="id" column="id"/>
        <result property="organizationId" column="organization_id"/>
        <result property="recruitmentDepartmentIds" column="recruitment_department_ids"/>
        <result property="positionName" column="position_name"/>
        <result property="recruitmentNumbers" column="recruitment_numbers"/>
        <result property="positionDuty" column="position_duty"/>
        <result property="positionRequirement" column="position_requirement"/>
        <result property="recruitmentGrades" column="recruitment_grades"/>
        <result property="recruitmentCollegeIds" column="recruitment_college_ids"/>
        <result property="recruitmentMajorIds" column="recruitment_major_ids"/>
        <result property="releaseTime" column="release_time"/>
        <result property="registrationTimeFrom" column="registration_time_from"/>
        <result property="registrationTimeTo" column="registration_time_to"/>
        <result property="recruitmentStatus" column="recruitment_status"/>
        <result property="available" column="is_available"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="recruitment">
        id, organization_id, recruitment_department_ids, position_name, recruitment_numbers, position_duty,
        position_requirement, recruitment_grades, recruitment_college_ids, recruitment_major_ids, release_time,
        registration_time_from, registration_time_to, recruitment_status, is_available, create_time, update_time
    </sql>

    <insert id="insertRecruitment" keyProperty="id">
        insert into recruitment(organization_id, recruitment_department_ids, position_name, recruitment_numbers,
                                position_duty, position_requirement, recruitment_grades, recruitment_college_ids,
                                recruitment_major_ids, release_time, registration_time_from, registration_time_to,
                                recruitment_status)
        values(#{organizationId},
               json_array(
                <foreach item="recruitmentDepartmentId" collection="recruitmentDepartmentIds" separator="," >
                    #{recruitmentDepartmentId}
                </foreach>),
               #{positionName}, #{recruitmentNumbers}, #{positionDuty}, #{positionRequirement},
                json_array(
                <foreach item="recruitmentGrade" collection="recruitmentGrades" separator="," >
                    #{recruitmentGrade}
                </foreach>),
                json_array(
                <foreach item="recruitmentCollegeId" collection="recruitmentCollegeIds" separator="," >
                    #{recruitmentCollegeId}
                </foreach>),
                json_array(
                <foreach item="recruitmentMajorId" collection="recruitmentMajorIds" separator="," >
                    #{recruitmentMajorId}
                </foreach>),
                #{releaseTime}, #{registrationTimeFrom}, #{registrationTimeTo}, #{recruitmentStatus})
    </insert>

    <select id="getRecruitment" resultMap="recruitment">
        select <include refid="recruitment"/>
        from recruitment
        where id = #{id}
    </select>

    <select id="getAvailable" resultType="java.lang.Boolean">
        select is_available
        from recruitment
        where id = #{id}
    </select>

    <select id="getOrganizationId" resultType="java.lang.Long">
        select organization_id
        from recruitment
        where id = #{id}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*)
        from recruitment
        where id = #{id}
    </select>

    <select id="countRecruitmentCollegeIds" resultType="java.lang.Integer">
        select json_length(recruitment_college_ids)
        from recruitment
        where id = #{id}
    </select>

    <select id="countRecruitmentMajorIds" resultType="java.lang.Integer">
        select json_length(recruitment_major_ids)
        from recruitment
        where id = #{id}
    </select>

    <update id="addRecruitmentCollege">
        update recruitment
        set recruitment_college_ids = json_array_append(recruitment_college_ids, '$', cast(#{collegeId} as char))
        where id = #{id}
        and not cast(#{collegeId} as char) member of(recruitment_college_ids->'$')
    </update>

    <update id="addRecruitmentMajor">
        update recruitment
        set recruitment_major_ids = json_array_append(recruitment_major_ids, '$', cast(#{majorId} as char))
        where id = #{id}
        and not cast(#{majorId} as char) member of(recruitment_major_ids->'$')
    </update>

    <update id="addRecruitmentGrade">
        update recruitment
        set recruitment_grades = json_array_append(recruitment_grades, '$', #{grade})
        where id = #{id}
          and not #{grade} member of(recruitment_grades->'$')
    </update>

    <update id="addRecruitmentDepartment">
        update recruitment
        set recruitment_department_ids =
            json_array_append(recruitment_department_ids, '$', cast(#{departmentId} as char))
        where id = #{id}
          and not cast(#{departmentId} as char) member of(recruitment_department_ids->'$')
    </update>

    <update id="removeRecruitmentCollege">
        update recruitment
        set recruitment_college_ids = json_remove(recruitment_college_ids,
            replace(json_search(recruitment_college_ids, 'one', cast(#{collegeId} as char)), '"', ''))
        where id = #{id}
        and cast(#{collegeId} as char) member of(recruitment_college_ids->'$')
    </update>

    <update id="removeRecruitmentMajor">
        update recruitment
        set recruitment_major_ids = json_remove(recruitment_major_ids,
            replace(json_search(recruitment_major_ids, 'one', cast(#{majorId} as char)), '"', ''))
        where id = #{id}
          and cast(#{majorId} as char) member of(recruitment_major_ids->'$')
    </update>

    <update id="removeRecruitmentGrade">
        update recruitment
        set recruitment_grades = json_remove(recruitment_grades,
            replace(json_search(recruitment_grades, 'one', #{grade}), '"', ''))
        where id = #{id}
          and #{grade} member of(recruitment_grades->'$')
    </update>

    <update id="removeRecruitmentDepartment">
        update recruitment
        set recruitment_department_ids =json_remove(recruitment_department_ids,
            replace(json_search(recruitment_department_ids, 'one', cast(#{departmentId} as char)), '"', ''))
        where id = #{id}
          and cast(#{departmentId} as char) member of(recruitment_department_ids->'$')
    </update>

    <update id="clearRecruitmentCollegeIds">
        update recruitment
        set recruitment_college_ids = json_array()
        where id = #{id}
    </update>

    <update id="clearRecruitmentMajorIds">
        update recruitment
        set recruitment_major_ids = json_array()
        where id = #{id}
    </update>

    <update id="clearRecruitmentGrades">
        update recruitment
        set recruitment_grades = json_array()
        where id = #{id}
    </update>

    <update id="clearRecruitmentDepartmentIds">
        update recruitment
        set recruitment_department_ids = json_array()
        where id = #{id}
    </update>

    <update id="updatePositionName">
        update recruitment
        set position_name = #{positionName}
        where id = #{id}
        and position_name != #{positionName}
    </update>

    <update id="updateRecruitmentNumbers">
        update recruitment
        set recruitment_numbers = #{recruitmentNumbers}
        where id = #{id}
          and recruitment_numbers != #{recruitmentNumbers}
    </update>

    <update id="updatePositionDuty">
        update recruitment
        set position_duty = #{positionDuty}
        where id = #{id}
          and position_duty != #{positionDuty}
    </update>

    <update id="updatePositionRequirement">
        update recruitment
        set position_requirement = #{positionRequirement}
        where id = #{id}
          and position_requirement != #{positionRequirement}
    </update>

    <update id="updateReleaseTime">
        update recruitment
        set release_time = #{releaseTime}
        where id = #{id}
          and release_time != #{releaseTime}
    </update>

    <update id="updateRegistrationTimeFrom">
        update recruitment
        set registration_time_from = #{registrationTimeFrom}
        where id = #{id}
          and registration_time_from != #{registrationTimeFrom}
        and #{registrationTimeFrom} >= release_time
    </update>

    <update id="updateRegistrationTimeFromToReleaseTime">
        update recruitment
        set registration_time_from = release_time
        where id = #{id}
    </update>

    <update id="updateRegistrationTimeTo">
        update recruitment
        set registration_time_to = #{registrationTimeTo}
        where id = #{id}
          and registration_time_to != #{registrationTimeTo}
          and #{registrationTimeTo} > registration_time_from
    </update>

    <update id="updateRecruitmentStatus">
        update recruitment
        set recruitment_status = #{newRecruitmentStatus}
        where id = #{id}
          and recruitment_status = #{oldRecruitmentStatus}
    </update>

    <update id="updateRecruitmentStatusWhenNotEqual">
        update recruitment
        set recruitment_status = #{recruitmentStatus}
        where id = #{id}
          and recruitment_status != #{recruitmentStatus}
    </update>

    <update id="updateAvailable">
        update recruitment
        set is_available = #{available}
        where id = #{id}
          and is_available = !#{available}
    </update>

    <update id="updateRecruitmentStatusWhenReleaseTimeLessThan">
        update recruitment
        set recruitment_status = #{newRecruitmentStatus}
        where recruitment_status = #{oldRecruitmentStatus}
          and release_time &lt; #{time}
    </update>

    <update id="updateRecruitmentStatusWhenRegistrationTimeFromLessThan">
        update recruitment
        set recruitment_status = #{newRecruitmentStatus}
        where recruitment_status = #{oldRecruitmentStatus}
          and registration_time_from &lt; #{time}
    </update>

    <update id="updateRecruitmentStatusWhenRegistrationTimeToLessThan">
        update recruitment
        set recruitment_status = #{newRecruitmentStatus}
        where recruitment_status = #{oldRecruitmentStatus}
          and registration_time_to &lt; #{time}
    </update>

</mapper>